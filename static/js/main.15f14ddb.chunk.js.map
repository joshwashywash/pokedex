{"version":3,"sources":["ThemeProvider.js","components/PokeContext.js","GlobalStyle.js","components/Flex.js","queries/index.js","components/PokeListItem.js","components/Sidebar.js","components/PokeInfo.js","App.js","index.js"],"names":["theme","purple","red","orange","yellow","ThemeProvider","children","PokemonContext","React","createContext","PokeProvider","useState","poke","setPoke","Provider","value","usePoke","context","useContext","undefined","Error","GlobalStyle","createGlobalStyle","props","Flex","styled","div","GET_POKEMON","gql","ListItem","li","ListText","p","PokeListItem","onClick","name","Container","List","ul","Sidebar","useQuery","loading","error","data","message","pokemon","map","key","dex","PokeInfo","alt","src","client","ApolloClient","uri","App","ReactDOM","render","document","getElementById"],"mappings":"uMAIMA,EAAQ,CACbC,OAAQ,UACRC,IAAK,UACLC,OAAQ,UACRC,OAAQ,WAGHC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,kBAAC,IAAD,CAAIN,MAAOA,GAAQM,I,QCTrDC,EAAiBC,IAAMC,gBAEvBC,EAAe,SAAC,GAAkB,IAAhBJ,EAAe,EAAfA,SAAe,EACdK,mBAAS,MADK,mBAC/BC,EAD+B,KACzBC,EADyB,KAEtC,OACC,kBAACN,EAAeO,SAAhB,CAAyBC,MAAO,CAAEH,OAAMC,YACtCP,IAKEU,EAAU,WACf,IAAMC,EAAUC,qBAAWX,GAC3B,QAAgBY,IAAZF,EACH,MAAM,IAAIG,MAAM,kDACjB,OAAOH,G,kXCfR,IAsBeI,EAtBKC,YAAH,KAQC,SAAAC,GAAK,OAAIA,EAAMvB,MAAMI,UAC1B,SAAAmB,GAAK,OAAIA,EAAMvB,MAAMC,UAKhB,SAAAsB,GAAK,OAAIA,EAAMvB,MAAMC,UAIrB,SAAAsB,GAAK,OAAIA,EAAMvB,MAAMG,U,oLClBvC,IAQeqB,EARFC,IAAOC,IAAV,K,+QCAH,IAAMC,EAAcC,YAAH,K,GASAA,YAAH,K,4XCNrB,IAAMC,EAAWJ,IAAOK,GAAV,KAOE,SAAAP,GAAK,OAAIA,EAAMvB,MAAMG,UAGrB,SAAAoB,GAAK,OAAIA,EAAMvB,MAAME,OAI/B6B,EAAWN,IAAOO,EAAV,KAaCC,EATM,SAAC,GAAc,IAAZrB,EAAW,EAAXA,KACfC,EAAYG,IAAZH,QACR,OACC,kBAACgB,EAAD,CAAUK,QAAS,kBAAMrB,EAAQD,KAChC,kBAACmB,EAAD,KAAWnB,EAAKuB,Q,+PClBnB,IAAMC,EAAYX,IAAOC,IAAV,KAKTW,EAAOZ,IAAOa,GAAV,KAqBKC,EAfC,WAAO,IAAD,EACYC,YAASb,GAAlCc,EADa,EACbA,QAASC,EADI,EACJA,MAAOC,EADH,EACGA,KACxB,OAAIF,EAAgB,KAChBC,EAAcA,EAAME,QAEvB,kBAACR,EAAD,KACC,kBAACC,EAAD,KACEM,EAAKE,QAAQC,KAAI,SAAAlC,GAAI,OACrB,kBAAC,EAAD,CAAcmC,IAAKnC,EAAKoC,IAAKpC,KAAMA,UCnBlCwB,EAAYX,IAAOC,IAAV,sEAAGD,CAAH,oE,iHAsBAwB,EAfE,WAAO,IACfrC,EAASI,IAATJ,KACR,OACC,kBAAC,EAAD,KACEA,EACA,qBACCsC,IAAKtC,EAAKuB,KAEVgB,IAAG,UAjBI,4DAiBJ,OAAWvC,EAAKoC,IAAhB,UAED,OCbDI,EAAS,IAAIC,IAAa,CAAEC,IAAK,qCAoBxBC,EAlBH,WACX,OACC,kBAAC,IAAD,CAAgBH,OAAQA,GACvB,kBAAC,EAAD,KACC,oCACC,kBAAC,EAAD,MACA,kBAAC,EAAD,KACC,kBAAC,EAAD,KACC,kBAAC,EAAD,MACA,kBAAC,EAAD,YCpBPI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.15f14ddb.chunk.js","sourcesContent":["import React, { useContext } from 'react';\n\nimport { ThemeProvider as TP, ThemeContext } from 'styled-components';\n\nconst theme = {\n\tpurple: '#7c3f58',\n\tred: '#eb6b6f',\n\torange: '#f9a875',\n\tyellow: '#fff6d3'\n};\n\nconst ThemeProvider = ({ children }) => <TP theme={theme}>{children}</TP>;\n\nconst useTheme = () => {\n\treturn useContext(ThemeContext);\n};\n\nexport { ThemeProvider, useTheme };\n","import React, { useState, useContext } from 'react';\n\nconst PokemonContext = React.createContext();\n\nconst PokeProvider = ({ children }) => {\n\tconst [poke, setPoke] = useState(null);\n\treturn (\n\t\t<PokemonContext.Provider value={{ poke, setPoke }}>\n\t\t\t{children}\n\t\t</PokemonContext.Provider>\n\t);\n};\n\nconst usePoke = () => {\n\tconst context = useContext(PokemonContext);\n\tif (context === undefined)\n\t\tthrow new Error('usePoke can only be used within a PokeProvider');\n\treturn context;\n};\n\nexport { PokeProvider, usePoke };\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    background: ${props => props.theme.yellow};\n    color: ${props => props.theme.purple};\n    font-family: 'Press Start 2P', 'cursive';\n  }\n\n  ::-webkit-scrollbar {\n    background: ${props => props.theme.purple};\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: ${props => props.theme.orange};\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\nconst Flex = styled.div`\n\tdisplay: flex;\n\theight: 100vh;\n\t@media (max-width: 768px) {\n\t\tflex-direction: column-reverse;\n\t}\n`;\n\nexport default Flex;\n","import { gql } from 'apollo-boost';\n\nexport const GET_POKEMON = gql`\n\t{\n\t\tpokemon {\n\t\t\tdex\n\t\t\tname\n\t\t}\n\t}\n`;\n\nexport const GET_POKE = gql`\n\tquery Poke($dex: ID!) {\n\t\tpoke(dex: $dex) {\n\t\t\tname\n\t\t}\n\t}\n`;\n","import React from 'react';\n\nimport styled from 'styled-components';\nimport { usePoke } from './PokeContext';\n\nconst ListItem = styled.li`\n\tdisplay: flex;\n\tjustify-content: center;\n\tpadding: 1em;\n\tcursor: pointer;\n\t-webkit-tap-highlight-color: transparent;\n\t&:hover {\n\t\tbackground: ${props => props.theme.orange};\n\t}\n\t&:active {\n\t\tbackground: ${props => props.theme.red};\n\t}\n`;\n\nconst ListText = styled.p`\n\tuser-select: none;\n`;\n\nconst PokeListItem = ({ poke }) => {\n\tconst { setPoke } = usePoke();\n\treturn (\n\t\t<ListItem onClick={() => setPoke(poke)}>\n\t\t\t<ListText>{poke.name}</ListText>\n\t\t</ListItem>\n\t);\n};\n\nexport default PokeListItem;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nimport { GET_POKEMON } from '../queries';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport PokeListItem from './PokeListItem';\n\nconst Container = styled.div`\n\talign-self: stretch;\n\toverflow-y: scroll;\n`;\n\nconst List = styled.ul`\n\tdisplay: flex;\n\tflex-direction: column;\n\tlist-style: none;\n`;\n\nconst Sidebar = () => {\n\tconst { loading, error, data } = useQuery(GET_POKEMON);\n\tif (loading) return null;\n\tif (error) return error.message;\n\treturn (\n\t\t<Container>\n\t\t\t<List>\n\t\t\t\t{data.pokemon.map(poke => (\n\t\t\t\t\t<PokeListItem key={poke.dex} poke={poke} />\n\t\t\t\t))}\n\t\t\t</List>\n\t\t</Container>\n\t);\n};\n\nexport default Sidebar;\n","import React from 'react';\n\n// import styled from 'styled-components';\nimport styled from 'styled-components/macro';\n\nimport { usePoke } from './PokeContext';\n\nconst url = 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/';\n\nconst Container = styled.div`\n\tflex: 1;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nconst PokeInfo = () => {\n\tconst { poke } = usePoke();\n\treturn (\n\t\t<Container>\n\t\t\t{poke ? (\n\t\t\t\t<img\n\t\t\t\t\talt={poke.name}\n\t\t\t\t\tcss=\"max-width: 100%\"\n\t\t\t\t\tsrc={`${url}${poke.dex}.png`}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</Container>\n\t);\n};\n\nexport default PokeInfo;\n","import React from 'react';\n\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { ThemeProvider } from './ThemeProvider';\nimport { PokeProvider } from './components/PokeContext';\n\nimport GlobalStyle from './GlobalStyle';\n\nimport Flex from './components/Flex';\nimport Sidebar from './components/Sidebar';\nimport PokeInfo from './components/PokeInfo';\n\nconst client = new ApolloClient({ uri: 'https://pokemonql.herokuapp.com/' });\n\nconst App = () => {\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t<ThemeProvider>\n\t\t\t\t<>\n\t\t\t\t\t<GlobalStyle />\n\t\t\t\t\t<PokeProvider>\n\t\t\t\t\t\t<Flex>\n\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t\t<PokeInfo />\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t</PokeProvider>\n\t\t\t\t</>\n\t\t\t</ThemeProvider>\n\t\t</ApolloProvider>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}